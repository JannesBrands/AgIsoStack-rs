var searchIndex = JSON.parse('{\
"ag_iso_stack":{"doc":"","t":"AADSNDDSIENNEEENNNNDSSNNNSSSNNNDENNDNNNENLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLKLMMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLKLLLLKLLLLLLLLLLLKLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLAAANNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLNDENENNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMNNNNNNNNNDDENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["driver","network_management","Address","BROADCAST","BusError","CanId","Channel","Default","Driver","DriverCloseError","DriverClosed","DriverClosed","DriverOpenError","DriverReadError","DriverWriteError","ErrorFrame","Extended","Five","Four","Frame","GLOBAL","Highest","IoError","IoError","IoError","Lowest","NULL","NULL","NoFrameReady","NotReady","One","Pgn","Priority","Seven","Six","SocketcanDriver","Standard","Three","Two","Type","Zero","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","close","close","data","data_length","data_page","default","default","default","destination_address","encode_unchecked","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","extended","extended_data_page","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_id","from_raw","hash","hash","hash","hash","hash","id","into","into","into","into","into","into","into","into","into","into","into","into","is_broadcast","is_destination_specific","is_proprietary","is_valid","is_valid","new","new_by_index","new_by_name","open","open","pdu_format","pdu_specific","pgn","priority","provide","provide","provide","provide","raw","raw","read_nonblocking","read_nonblocking","source","source_address","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_encode","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_nonblocking","write_nonblocking","common_parameter_group_numbers","control_function","name","Acknowledgement","ActiveDiagnosticTroubleCodes","AddressClaim","AllowAll","AuthenticationClientToAuthenticationServer","AuthenticationServerToAuthenticationClient","BinaryDataTransfer","CommandedAddress","CommonParameterGroupNumbers","ControlFunctionFunctionalities","CruiseControlVehicleSpeed1","DiagnosticDataClearResetForActiveDtcs","DiagnosticDataClearResetOfPreviouslyActiveDtcs","DiagnosticProtocol","EcuIdentificationInformation","ElectronicEngineController1","ElectronicEngineController2","EngineTemperature1","ExtendedTransportProtocolCommand","ExtendedTransportProtocolData","FreezeFrameParameters","GroundBasedSpeedAndDistance","GuidanceMachineStatus","GuidanceSystemCommand","HeartbeatMessage","IntakeExhaustConditions1","IsobusComplianceCertificationMessage","MaintainPower","MemoryAccessRequest","MemoryAccessResponse","NameManagement","NmeaAltitudeDeltaHighPrecisionRapidUpdate","NmeaAttitude","NmeaCogSogRapidUpdate","NmeaGnssDops","NmeaGnssPositionData","NmeaGnssPseudoRangeErrorStatistics","NmeaGnssPseudoRangeNoiseStatistics","NmeaGnssSatsInView","NmeaPositionDeltaHighPrecisionRapidUpdate","NmeaTimeDate","NodeToVirtualTerminal","ParameterGroupNumberRequest","PreviouslyActiveDiagnosticTroubleCodes","ProductIdentification","ProprietaryA","RequestForRepetitionRate","ResponseForRepetitionRate","SoftwareIdentification","StopStartBroadcast","TimeDate","TractorImplementManagementClientToTimServer","TractorImplementManagementServerToTimClient","TransportProtocolCommand","TransportProtocolData","VirtualTerminalToNode","WheelBasedSpeedAndDistance","WorkingSetMaster","borrow","borrow_mut","clone","clone_into","eq","equivalent","fmt","from","into","to_owned","try_from","try_into","type_id","vzip","AddressClaimingComplete","AddressClaimingData","AddressClaimingState","ContendForPreferredAddress","ControlFunction","External","Internal","None","SendArbitraryAddressClaim","SendPreferredAddressClaim","SendReclaimAddressOnRequest","SendRequestForClaim","UnableToClaim","WaitForClaim","WaitForRequestContentionPeriod","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","eq","equivalent","from","from","from","get_enabled","get_preferred_address","get_state","get_timestamp","into","into","into","new","set_enabled","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","address_claim_data","name","name","DeviceClass","DeviceClassInstance","EcuInstance","ExtendedIdentityNumber","Function","FunctionInstance","IdentityNumber","IndustryGroup","ManufacturerCode","NAME","NameBuilder","NameField","SelfConfigurableAddress","ShortIdentityNumber","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","builder","clone","clone","clone_into","clone_into","default","default","device_class","device_class_instance","ecu_instance","eq","eq","equivalent","from","from","from","from","function_code","function_instance","get_device_class","get_device_class_instance","get_ecu_instance","get_extended_identity_number","get_function","get_function_instance","get_identity_number","get_industry_group","get_manufacturer_code","get_self_configurable_address","get_short_identity_number","has_field_value","has_field_values","identity_number","industry_group","into","into","into","manufacturer_code","new","new","self_configurable_address","set_device_class","set_device_class_instance","set_ecu_instance","set_extended_identity_number","set_function","set_function_instance","set_identity_number","set_industry_group","set_manufacturer_code","set_self_configurable_address","set_short_identity_number","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":[[0,"ag_iso_stack"],[2,"ag_iso_stack::driver"],[237,"ag_iso_stack::network_management"],[240,"ag_iso_stack::network_management::common_parameter_group_numbers"],[312,"ag_iso_stack::network_management::control_function"],[363,"ag_iso_stack::network_management::control_function::ControlFunction"],[366,"ag_iso_stack::network_management::name"]],"d":["CAN Driver layer","","","Alias for the global address","Some fault with the CAN bus","","","","Generic interface for CAN drivers","","The driver has been closed","The driver has been closed","","","","The driver received an error frame","29-bit CAN ID","","","","Address representing broadcasts for destination specific …","","The driver failed to open with filesystem semantics","The driver failed to read with filesystem semantics","Some fault with filesystem semantics","","The null address is used by ECUs without an address such …","A fake PGN used to denote a PGN that does not exist","There is no frame ready to be read","The driver’s internal buffer is full, or the driver is …","","","","You may also use <code>Priority::Lowest</code> as an alias","You may also use <code>Priority::Default</code> as an alias","A Linux socketcan Driver","11-bit CAN ID","","","","You may also use <code>Priority::Highest</code> as an alias","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Close the driver","","","","","","","","Get the destination address for this CAN ID, if it’s a …","Encodes a new extended ID using the discrete parts of an …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Determine whether the driver is connected and healthy","","","Create a socketcan driver with the given interface index","Create a socketcan driver with the given interface name. …","Open the driver","","","","Get the ID’s PGN","Get the priority of the ID","","","","","Get the raw value of the CAN ID","","Read a Frame from the driver, if possible","Read a frame from the driver, if possible","","Get the source address of the ID","","","","","","","","","","","Encodes a new extended ID using the discrete parts of an …","","","","","","","","","","","","","","","","","","","","","","","","","Get the type of the ID (standard or extended)","","","","","","","","","","","","","","","","","","","","","","","","","Write a Frame to the driver, if possible","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Address claiming is complete and we have an address     ","","","State machine is contending the preferred address  ","","","","Address claiming is uninitialized","State machine is claiming an address   ","State machine is claiming the preferred address","An ECU requested address claim, inform the bus of our …","State machine is sending the request for address claim     …","State machine could not claim an address","State machine is waiting for the random delay time         …","State machine is waiting for the address claim contention …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,17,0,0,2,0,0,16,17,0,0,0,16,3,2,2,0,1,2,15,16,17,2,1,5,16,17,2,0,0,2,2,0,3,2,2,0,2,8,1,2,3,4,15,6,16,17,10,11,5,8,1,2,3,4,15,6,16,17,10,11,5,11,1,2,3,4,5,1,2,3,4,5,39,8,11,11,5,4,10,11,4,4,1,2,3,4,5,1,2,3,4,5,11,5,1,2,3,4,15,15,6,6,16,16,17,17,10,11,5,8,1,2,2,3,4,15,15,6,16,16,16,17,17,17,10,11,5,5,5,1,2,3,4,5,11,8,1,2,3,4,15,6,16,17,10,11,5,5,5,5,39,8,4,8,8,39,8,5,5,4,4,15,6,16,17,4,5,39,8,15,4,11,1,2,3,4,5,15,6,16,17,4,8,1,2,3,4,15,6,16,17,10,11,5,8,1,2,3,4,15,6,16,17,10,11,5,4,8,1,2,3,4,15,6,16,17,10,11,5,8,1,2,3,4,15,6,16,17,10,11,5,39,8,0,0,0,28,28,28,28,28,28,28,28,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,29,0,0,29,0,40,40,29,29,29,29,29,29,29,29,30,40,29,30,40,29,29,29,30,29,29,30,40,29,30,30,30,30,30,40,29,30,30,29,30,40,29,30,40,29,30,40,29,30,40,29,41,41,42,34,34,34,34,34,34,34,34,34,0,0,0,34,34,34,33,32,34,33,32,32,33,34,33,34,33,33,32,32,32,32,34,33,34,34,33,32,32,32,32,33,33,33,33,33,33,33,33,33,33,33,33,33,32,32,34,33,32,32,33,32,32,33,33,33,33,33,33,33,33,33,33,33,34,33,34,33,32,34,33,32,34,33,32,34,33,32],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1,1],[2,2],[3,3],[4,4],[5,5],[[]],[[]],[[]],[[]],[[]],[[],[[7,[6]]]],[8,[[7,[6]]]],0,0,[5,9],[[],4],[[],10],[[],11],[4,1],[[5,1,1,2],4],[[1,1],12],[[2,2],12],[[3,3],12],[[4,4],12],[[5,5],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,[5,9],[[1,13],14],[[2,13],14],[[3,13],14],[[4,13],14],[[15,13],14],[[15,13],14],[[6,13],14],[[6,13],14],[[16,13],14],[[16,13],14],[[17,13],14],[[17,13],14],[[10,13],14],[[11,13],14],[[5,13],14],[[]],[[]],[9,2],[[]],[[]],[[]],[[]],[18,15],[[]],[19,16],[[]],[18,16],[[]],[18,17],[19,17],[[]],[[]],[[]],[20,5],[20,5],[[1,21]],[[2,21]],[[3,21]],[[4,21]],[[5,21]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,12],[5,12],[5,12],[[],12],[8,12],[[20,3],4],[20,8],[22,8],[[],[[7,[15]]]],[8,[[7,[15]]]],[5,9],[5,9],[4,5],[4,2],[23],[23],[23],[23],[4,20],[5,20],[11,[[7,[16]]]],[[8,11],[[7,[16]]]],[15,[[25,[24]]]],[4,1],0,[[]],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[5,1,1,2],[[7,[4,0]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[4,3],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11,[[7,[17]]]],[[8,11],[[7,[17]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[28,28],[[]],[[28,28],12],[[],12],[[28,13],14],[[]],[[]],[[]],[[],7],[[],7],[[],27],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[29,29],[[]],[[],30],[[29,29],12],[[],12],[[]],[[]],[[]],[30,12],[30,9],[30,29],[30,[[25,[31]]]],[[]],[[]],[[]],[[9,12],30],[[30,12]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],27],[[],27],[[],27],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[32,33],[[],32],[34,34],[33,33],[[]],[[]],[[],33],[[],32],[[32,[35,[9]]],32],[[32,[35,[9]]],32],[[32,[35,[9]]],32],[[34,34],12],[[33,33],12],[[],12],[[]],[[]],[[]],[33,32],[[32,[35,[9]]],32],[[32,[35,[9]]],32],[33,9],[33,9],[33,9],[33,9],[33,9],[33,9],[33,20],[33,9],[33,36],[33,12],[33,36],[[33,34],12],[[33,[37,[34]]],12],[[32,[35,[20]]],32],[[32,[35,[9]]],32],[[]],[[]],[[]],[[32,[35,[36]]],32],[38,33],[[],32],[[32,[35,[12]]],32],[[33,9]],[[33,9]],[[33,9]],[[33,9]],[[33,9]],[[33,9]],[[33,20]],[[33,9]],[[33,36]],[[33,12]],[[33,36]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],27],[[],27],[[],27],[[]],[[]],[[]]],"c":[],"p":[[3,"Address"],[4,"Priority"],[4,"Type"],[3,"CanId"],[3,"Pgn"],[4,"DriverCloseError"],[4,"Result"],[3,"SocketcanDriver"],[15,"u8"],[3,"Channel"],[3,"Frame"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"DriverOpenError"],[4,"DriverReadError"],[4,"DriverWriteError"],[3,"Error"],[4,"Error"],[15,"u32"],[8,"Hasher"],[15,"str"],[3,"Demand"],[8,"Error"],[4,"Option"],[3,"String"],[3,"TypeId"],[4,"CommonParameterGroupNumbers"],[4,"AddressClaimingState"],[3,"AddressClaimingData"],[3,"Instant"],[3,"NameBuilder"],[3,"NAME"],[4,"NameField"],[8,"Into"],[15,"u16"],[15,"slice"],[15,"u64"],[8,"Driver"],[4,"ControlFunction"],[13,"Internal"],[13,"External"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
